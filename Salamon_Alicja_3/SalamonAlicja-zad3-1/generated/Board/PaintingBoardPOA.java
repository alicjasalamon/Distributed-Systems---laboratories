package Board;


/**
* Board/PaintingBoardPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Board.idl
* Wednesday, April 17, 2013 3:31:24 PM CEST
*/

public abstract class PaintingBoardPOA extends org.omg.PortableServer.Servant
 implements Board.PaintingBoardOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("createFigure", new java.lang.Integer (0));
    _methods.put ("removeFigure", new java.lang.Integer (1));
    _methods.put ("register", new java.lang.Integer (2));
    _methods.put ("unregister", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // Board/PaintingBoard/createFigure
       {
         try {
           String type = in.read_string ();
           Board.Parameters params = Board.ParametersHelper.read (in);
           Board.Figure $result = null;
           $result = this.createFigure (type, params);
           out = $rh.createReply();
           Board.FigureHelper.write (out, $result);
         } catch (Board.FigureNameNotExists $ex) {
           out = $rh.createExceptionReply ();
           Board.FigureNameNotExistsHelper.write (out, $ex);
         } catch (Board.FigureWrongParameters $ex) {
           out = $rh.createExceptionReply ();
           Board.FigureWrongParametersHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // Board/PaintingBoard/removeFigure
       {
         try {
           Board.Figure figure = Board.FigureHelper.read (in);
           Board.Figure $result = null;
           $result = this.removeFigure (figure);
           out = $rh.createReply();
           Board.FigureHelper.write (out, $result);
         } catch (Board.FigureNotExists $ex) {
           out = $rh.createExceptionReply ();
           Board.FigureNotExistsHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // Board/PaintingBoard/register
       {
         try {
           String name = in.read_string ();
           Board.Listener listener = Board.ListenerHelper.read (in);
           this.register (name, listener);
           out = $rh.createReply();
         } catch (Board.UserAlreadyExists $ex) {
           out = $rh.createExceptionReply ();
           Board.UserAlreadyExistsHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // Board/PaintingBoard/unregister
       {
         try {
           String name = in.read_string ();
           this.unregister (name);
           out = $rh.createReply();
         } catch (Board.UserNotExists $ex) {
           out = $rh.createExceptionReply ();
           Board.UserNotExistsHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Board/PaintingBoard:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public PaintingBoard _this() 
  {
    return PaintingBoardHelper.narrow(
    super._this_object());
  }

  public PaintingBoard _this(org.omg.CORBA.ORB orb) 
  {
    return PaintingBoardHelper.narrow(
    super._this_object(orb));
  }


} // class PaintingBoardPOA
